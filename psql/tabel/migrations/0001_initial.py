# Generated by Django 4.1.7 on 2023-03-31 13:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfApplicationIdentifiers',
            fields=[
                ('id', models.CharField(max_length=256, primary_key=True, serialize=False)),
                ('user_id', models.IntegerField(blank=True, null=True)),
                ('date', models.BigIntegerField(blank=True, null=True)),
                ('last_date', models.BigIntegerField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=256, null=True)),
                ('ip_addr', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'lf_application_identifiers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfApplicationOptions',
            fields=[
                ('uuid', models.CharField(max_length=128, primary_key=True, serialize=False)),
                ('options', models.JSONField(blank=True, null=True)),
                ('date', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lf_application_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('hour_limit', models.SmallIntegerField()),
                ('hour_limit_current', models.SmallIntegerField()),
                ('geo', models.SmallIntegerField()),
                ('uniq_ip', models.SmallIntegerField()),
                ('credits', models.DecimalField(decimal_places=5, max_digits=16)),
                ('interval', models.TextField()),
                ('name', models.CharField(max_length=255)),
                ('moby', models.SmallIntegerField()),
                ('moby_ratio', models.SmallIntegerField()),
                ('date_add', models.BigIntegerField()),
                ('date_edit', models.BigIntegerField()),
                ('options', models.JSONField(blank=True, null=True)),
                ('priority', models.SmallIntegerField()),
                ('day_limit', models.SmallIntegerField()),
                ('day_limit_current', models.SmallIntegerField()),
                ('version', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'lf_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfGroupsOptions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_id', models.BigIntegerField()),
                ('option', models.CharField(blank=True, max_length=12, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lf_groups_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfListCountries',
            fields=[
                ('id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('accept_language', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'lf_list_countries',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfPages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_id', models.BigIntegerField()),
                ('position', models.SmallIntegerField()),
                ('state', models.SmallIntegerField()),
                ('day_limit', models.SmallIntegerField()),
                ('day_limit_current', models.SmallIntegerField()),
                ('day_limit_up', models.SmallIntegerField()),
                ('showtime', models.TextField()),
                ('referrers', models.JSONField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, null=True)),
                ('url', models.JSONField(blank=True, null=True)),
                ('search_engines', models.JSONField(blank=True, null=True)),
                ('behavior', models.BooleanField()),
                ('referrer_type', models.SmallIntegerField()),
                ('clicks', models.BooleanField(blank=True, null=True)),
                ('elements', models.JSONField(blank=True, null=True)),
                ('options', models.JSONField(blank=True, null=True)),
                ('date_add', models.BigIntegerField()),
                ('date_edit', models.BigIntegerField()),
            ],
            options={
                'db_table': 'lf_pages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfPagesCompiledStats',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('group_id', models.BigIntegerField()),
                ('page_id', models.BigIntegerField()),
                ('visits', models.IntegerField()),
                ('credits', models.DecimalField(decimal_places=5, max_digits=16)),
                ('data', models.JSONField(blank=True, null=True)),
                ('date', models.BigIntegerField()),
            ],
            options={
                'db_table': 'lf_pages_compiled_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfPagesOptions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('page_id', models.BigIntegerField()),
                ('option', models.CharField(blank=True, max_length=12, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lf_pages_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfPagesStats',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('page_id', models.BigIntegerField()),
                ('date', models.BigIntegerField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('group_id', models.BigIntegerField(blank=True, null=True)),
                ('user_id', models.BigIntegerField(blank=True, null=True)),
                ('client_user_id', models.BigIntegerField(blank=True, null=True)),
                ('server', models.CharField(blank=True, max_length=32, null=True)),
                ('ip_addr', models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                'db_table': 'lf_pages_stats',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfPerfomance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.BigIntegerField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('env', models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                'db_table': 'lf_perfomance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfProxyProfiles',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(blank=True, max_length=255, null=True)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('proxy', models.CharField(blank=True, max_length=255, null=True)),
                ('link_uuid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_create', models.BigIntegerField(blank=True, null=True)),
                ('date_last_use', models.BigIntegerField(blank=True, null=True)),
                ('date_last_check', models.BigIntegerField(blank=True, null=True)),
                ('is_active', models.SmallIntegerField(blank=True, null=True)),
                ('countryiso', models.CharField(blank=True, db_column='countryISO', max_length=255, null=True)),
                ('fail_checks', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'lf_proxy_profiles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfShowingGeo',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_id', models.BigIntegerField()),
                ('country', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'lf_showing_geo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfShowingTimes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('group_id', models.BigIntegerField()),
                ('hour', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'lf_showing_times',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfUsersOptions',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('credits', models.DecimalField(decimal_places=5, max_digits=16)),
                ('workmode', models.SmallIntegerField()),
                ('type', models.SmallIntegerField()),
                ('experience', models.BigIntegerField()),
                ('env', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'lf_users_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LfUsersStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('visits', models.IntegerField()),
                ('credits', models.DecimalField(decimal_places=5, max_digits=16)),
                ('experience', models.IntegerField()),
                ('date', models.BigIntegerField()),
                ('data', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'lf_users_stats',
                'managed': False,
            },
        ),
    ]
